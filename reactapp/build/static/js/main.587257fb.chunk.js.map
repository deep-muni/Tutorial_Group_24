{"version":3,"sources":["serviceWorker.js","components/Movie.js","tut5_6/showUser.js","tut5_6/showSpecUser.js","tut5_6/addUser.js","tut5_6/updateUser.js","components/Routes.js","tut5_6/bar.js","tut5_6/user.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","Movie","props","state","movie","id","this","url","Axios","get","data","setState","onClick","history","push","className","title","description","release_year","duration","cast","Component","ShowUser","users","map","tup","index","key","bid","name","email","show","ShowSpecUser","undefined","getUser","bind","document","getElementById","value","alert","type","placeholder","AddUser","msg","addUser","res","post","then","response","message","UpdateUser","updateUser","put","Routes","exact","path","component","Bar","active_1","active_2","active_3","active_4","selectButton","e","redirect","target","withRouter","User","App","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.587257fb.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, {Component} from \"react\";\nimport Axios from \"axios\";\nimport './Movie.css';\n\nclass Movie extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            movie: []\n        }\n    }\n\n    async componentDidMount(){\n        const id = this.props.location.state.id;\n        const url = \"https://api-tutorial4.herokuapp.com/movies?show_id=\" + id;\n        const data = await Axios.get(url);\n        this.setState({\n            movie: data.data[0]\n        });\n    }\n\n    render() {\n        return (\n            <div>\n                <div onClick={() => this.props.history.push('/') } className=\"back\"/>\n                <div className=\"spec-movie\">\n                    <h1>Selected Movie ID {this.props.location.state.id}</h1>\n                    <span>Movie Name:</span>\n                    <p>{this.state.movie.title}</p>\n                    <span>Movie Description:</span>\n                    <p>{this.state.movie.description}</p>\n                    <span>Release Year:</span>\n                    <p>{this.state.movie.release_year}</p>\n                    <span>Duration:</span>\n                    <p>{this.state.movie.duration}</p>\n                    <span>Cast:</span>\n                    <p>{this.state.movie.cast}</p>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Movie;\n","import React, { Component } from \"react\";\nimport Axios from \"axios\";\nimport './table.css';\n\nclass ShowUser extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            users: []\n        }\n    }\n\n    async componentDidMount() {\n        const url = \"https://tutorial-group-24.herokuapp.com/user\";\n        const data = await Axios.get(url);\n        this.setState({\n            users: data.data\n        })\n    }\n\n    show() {\n        return (\n            <table>\n                <thead>\n                    <tr>\n                        <th>Banner ID</th>\n                        <th>Name</th>\n                        <th>Email</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {\n                        this.state.users.map((tup, index) => {\n                            return (\n                                <tr key={index}>\n                                    <td>{tup.bid}</td>\n                                    <td>{tup.name}</td>\n                                    <td>{tup.email}</td>\n                                </tr>\n                            );\n                        })\n                    }\n                </tbody>\n            </table>\n        );\n    }\n\n    render() {\n        return (\n            <div>\n                {this.show()}\n            </div>\n        );\n    }\n}\n\nexport default ShowUser;\n","import React, { Component } from \"react\";\nimport Axios from \"axios\";\nimport './table.css';\n\nclass ShowSpecUser extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            users: undefined\n        }\n        this.getUser = this.getUser.bind(this);\n    }\n\n    async getUser() {\n\n        if (document.getElementById(\"banner\").value === \"\") {\n            alert(\"Please fill the field\");\n            return;\n        }\n\n        const url = \"https://tutorial-group-24.herokuapp.com/user/specUser/\" + document.getElementById(\"banner\").value;\n        const data = await Axios.get(url);\n        this.setState({\n            users: data.data[0]\n        })\n    }\n\n    show() {\n        if (this.state.users === undefined) {\n            return null;\n        } else {\n            return (\n                <tr>\n                    <td>{this.state.users.bid}</td>\n                    <td>{this.state.users.name}</td>\n                    <td>{this.state.users.email}</td>\n                </tr>\n            );\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"gap\">\n                    <input type=\"text\" id=\"banner\" placeholder=\"Enter Banner ID\" />\n                    <button className=\"searchUser\" onClick={this.getUser}>Search</button>\n                </div>\n                <table>\n                    <thead>\n                        <tr>\n                            <th>Banner ID</th>\n                            <th>Name</th>\n                            <th>Email</th>\n                        </tr>\n                        {this.show()}\n                    </thead>\n                    <tbody>\n                    </tbody>\n                </table>\n            </div>\n        );\n    }\n}\n\nexport default ShowSpecUser;\n\n","import React, { Component } from \"react\";\nimport Axios from \"axios\";\nimport './table.css';\n\nclass AddUser extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            msg: ''\n        }\n\n        this.addUser = this.addUser.bind(this);\n\n    }\n\n    async addUser() {\n\n        if (document.getElementById(\"banner\").value === \"\" ||\n            document.getElementById(\"name\").value === \"\" ||\n            document.getElementById(\"email\").value === \"\") {\n            alert(\"Please fill the fields\");\n            return;\n        }\n\n        let res = '';\n\n        const url = \"https://tutorial-group-24.herokuapp.com/user/addUser/\";\n        await Axios.post(url, {\n            bid: document.getElementById(\"banner\").value,\n            name: document.getElementById(\"name\").value,\n            email: document.getElementById(\"email\").value\n        })\n            .then(function (response) {\n                res = response;\n            })\n\n        this.setState({\n            msg: res.data.message\n        })\n\n    }\n\n    render() {\n        return (\n            <div>\n                <input type=\"text\" id=\"banner\" placeholder=\"Enter Banner ID\" />\n                <input type=\"text\" id=\"name\" placeholder=\"Enter Name\" />\n                <input type=\"text\" id=\"email\" placeholder=\"Enter Email\" />\n                <button className=\"addUser\" onClick={this.addUser}>Add</button>\n                <p className=\"msg\">{this.state.msg}</p>\n            </div>\n        );\n    }\n}\n\nexport default AddUser;\n\n","import React, { Component } from \"react\";\nimport Axios from \"axios\";\n\nclass UpdateUser extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            msg: ''\n        }\n\n        this.updateUser = this.updateUser.bind(this);\n\n    }\n\n    async updateUser() {\n\n        if (document.getElementById(\"banner\").value === \"\" ||\n            document.getElementById(\"name\").value === \"\" ||\n            document.getElementById(\"email\").value === \"\") {\n            alert(\"Please fill the fields\");\n            return;\n        }\n\n        let res = '';\n\n        const url = \"https://tutorial-group-24.herokuapp.com/user/modifyUser/\" + document.getElementById(\"banner\").value;\n        await Axios.put(url, {\n            bid: document.getElementById(\"banner\").value,\n            name: document.getElementById(\"name\").value,\n            email: document.getElementById(\"email\").value\n        })\n            .then(function (response) {\n                res = response;\n            })\n\n        this.setState({\n            msg: res.data.message\n        })\n\n        document.getElementById(\"banner\").value = \"\";\n        document.getElementById(\"name\").value = \"\";\n        document.getElementById(\"email\").value = \"\";\n    }\n\n    render() {\n        return (\n            <div>\n                <input type=\"text\" id=\"banner\" placeholder=\"Enter Banner ID\" />\n                <input type=\"text\" id=\"name\" placeholder=\"Enter Name\" />\n                <input type=\"text\" id=\"email\" placeholder=\"Enter Email\" />\n                <button className=\"updateUser\" onClick={this.updateUser}>Update</button>\n                <p className=\"msg\">{this.state.msg}</p>\n            </div>\n        );\n    }\n}\n\nexport default UpdateUser;\n","import React, {Component} from \"react\";\nimport {Route, Switch} from \"react-router-dom\";\nimport Movie from \"./Movie\";\nimport ShowUser from \"../tut5_6/showUser\";\nimport ShowSpecUser from \"../tut5_6/showSpecUser\";\nimport AddUser from \"../tut5_6/addUser\";\nimport UpdateUser from \"../tut5_6/updateUser\";\n\nclass Routes extends Component {\n    render() {\n        return (\n            <Switch>\n                <Route exact path='/movie' component={Movie}/>\n                <Route exact path='/addUser' component={AddUser}/>\n                <Route exact path='/showUser' component={ShowUser}/>\n                <Route exact path='/updateUser' component={UpdateUser}/>\n                <Route exact path='/showSpecUser' component={ShowSpecUser}/>\n            </Switch>\n        );\n    }\n}\n\nexport default Routes;\n","import React, {Component} from \"react\";\nimport {withRouter} from \"react-router-dom\";\nimport './bar.css';\n\nclass Bar extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            active_1: false,\n            active_2: false,\n            active_3: false,\n            active_4: false\n        }\n\n        this.selectButton = this.selectButton.bind(this);\n\n    }\n\n    selectButton(e) {\n        let redirect = '';\n\n        if(e.target.id === 'active_1') {\n            this.setState({\n                active_1: true,\n                active_2: false,\n                active_3: false,\n                active_4: false\n            });\n            redirect = '/showUser';\n        }else if (e.target.id === 'active_2') {\n            this.setState({\n                active_1: false,\n                active_2: true,\n                active_3: false,\n                active_4: false\n            });\n            redirect = '/showSpecUser';\n        }else if (e.target.id === 'active_3') {\n            this.setState({\n                active_1: false,\n                active_2: false,\n                active_3: true,\n                active_4: false\n            });\n            redirect = '/addUser';\n        }else if (e.target.id === 'active_4') {\n            this.setState({\n                active_1: false,\n                active_2: false,\n                active_3: false,\n                active_4: true\n            });\n            redirect = '/updateUser';\n        }\n        this.props.history.push(redirect);\n    }\n\n    render() {\n        return (\n            <div className=\"buttonArea\">\n                <button className={this.state.active_1 ? 'buttonBar active' : 'buttonBar'} id=\"active_1\"\n                        onClick={this.selectButton}>Show Users</button>\n                <button className={this.state.active_2 ? 'buttonBar active' : 'buttonBar'} id=\"active_2\"\n                        onClick={this.selectButton}>Specific User</button>\n                <button className={this.state.active_3 ? 'buttonBar active' : 'buttonBar'} id=\"active_3\"\n                        onClick={this.selectButton}>Insert User</button>\n                <button className={this.state.active_4 ? 'buttonBar active' : 'buttonBar'} id=\"active_4\"\n                        onClick={this.selectButton}>Modify User</button>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(Bar);\n","import React, { Component } from \"react\";\nimport Bar from \"./bar\";\n\nclass User extends Component {\n    render() {\n        return (\n            <div>\n                <Bar />\n            </div>\n        );\n    }\n}\n\nexport default User;\n\n","import React from 'react';\nimport Routes from \"./components/Routes\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport User from \"./tut5_6/user\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <User />\n        <Routes />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}