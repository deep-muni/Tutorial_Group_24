{"version":3,"sources":["serviceWorker.js","components/Movie.js","tut5_6/addUser.js","tut5_6/showUser.js","tut5_6/updateUser.js","tut5_6/showSpecUser.js","components/Routes.js","tut5_6/bar.js","tut5_6/user.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","Movie","props","state","movie","id","this","url","Axios","get","data","setState","onClick","history","push","className","title","description","release_year","duration","cast","Component","AddUser","msg","addUser","bind","res","post","bid","document","getElementById","value","name","email","then","response","catch","err","console","log","Status","message","type","placeholder","ShowUser","users","map","tup","index","key","show","UpdateUser","updateUser","put","ShowSpecUser","undefined","getUser","alert","Routes","exact","path","component","Bar","active_1","active_2","active_3","active_4","selectButton","e","redirect","target","withRouter","User","App","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.e4a4ea45.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React, {Component} from \"react\";\r\nimport Axios from \"axios\";\r\nimport './Movie.css';\r\n\r\nclass Movie extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            movie: []\r\n        }\r\n    }\r\n\r\n    async componentDidMount(){\r\n        const id = this.props.location.state.id;\r\n        const url = \"https://api-tutorial4.herokuapp.com/movies?show_id=\" + id;\r\n        const data = await Axios.get(url);\r\n        this.setState({\r\n            movie: data.data[0]\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div onClick={() => this.props.history.push('/') } className=\"back\"/>\r\n                <div className=\"spec-movie\">\r\n                    <h1>Selected Movie ID {this.props.location.state.id}</h1>\r\n                    <span>Movie Name:</span>\r\n                    <p>{this.state.movie.title}</p>\r\n                    <span>Movie Description:</span>\r\n                    <p>{this.state.movie.description}</p>\r\n                    <span>Release Year:</span>\r\n                    <p>{this.state.movie.release_year}</p>\r\n                    <span>Duration:</span>\r\n                    <p>{this.state.movie.duration}</p>\r\n                    <span>Cast:</span>\r\n                    <p>{this.state.movie.cast}</p>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Movie;\r\n","import React, {Component} from \"react\";\r\nimport Axios from \"axios\";\r\nimport './table.css';\r\n\r\nclass AddUser extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            msg: ''\r\n        }\r\n\r\n        this.addUser = this.addUser.bind(this);\r\n\r\n    }\r\n\r\n    async addUser(){\r\n\r\n        let res = '';\r\n\r\n        const url = \"https://tutorial-group-24.herokuapp.com/user/addUser/\";\r\n        // const url = \"http://localhost:5000/user/addUser/\";\r\n        await Axios.post(url,{\r\n            bid: document.getElementById(\"banner\").value,\r\n            name: document.getElementById(\"name\").value,\r\n            email: document.getElementById(\"email\").value\r\n        })\r\n            .then(function (response) {\r\n                    res = response;\r\n            }).catch(err => {\r\n                console.log(\"Failure:\" + err);\r\n            })\r\n            if(res.data.Status === \"Success\"){\r\n                this.setState({\r\n                    msg: res.data.message\r\n                })\r\n            }\r\n\r\n        document.getElementById(\"banner\").value = \"\" ;\r\n        document.getElementById(\"name\").value = \"\" ;\r\n        document.getElementById(\"email\").value = \"\";\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <input type=\"text\" id=\"banner\" placeholder=\"Enter Banner ID\"/>\r\n                <input type=\"text\" id=\"name\" placeholder=\"Enter Name\"/>\r\n                <input type=\"text\" id=\"email\" placeholder=\"Enter Email\"/>\r\n                <button className=\"addUser\" onClick={this.addUser}>Submit</button>\r\n                <p className=\"msg\">{this.state.msg}</p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddUser;\r\n\r\n","import React, {Component} from \"react\";\r\nimport Axios from \"axios\";\r\nimport './table.css';\r\n\r\nclass ShowUser extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            users: []\r\n        }\r\n    }\r\n\r\n    async componentDidMount(){\r\n        const url = \"https://tutorial-group-24.herokuapp.com/user\";\r\n        // const url = \"http://localhost:5000/user\";\r\n        const response = await Axios.get(url);\r\n        if(response.data.Status === \"Success\"){\r\n            this.setState({\r\n                users: response.data.data\r\n            })\r\n        }\r\n    }\r\n    show() {\r\n        return (\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Banner ID</th>\r\n                        <th>Name</th>\r\n                        <th>Email</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                {\r\n                    this.state.users.map((tup, index) => {\r\n                        return(\r\n                          <tr key={index}>\r\n                              <td>{tup.bid}</td>\r\n                              <td>{tup.name}</td>\r\n                              <td>{tup.email}</td>\r\n                          </tr>\r\n                        );\r\n                    })\r\n                }\r\n                </tbody>\r\n            </table>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.show()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ShowUser;\r\n","import React, {Component} from \"react\";\r\nimport Axios from \"axios\";\r\n\r\nclass UpdateUser extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            msg: ''\r\n        }\r\n\r\n        this.updateUser = this.updateUser.bind(this);\r\n\r\n    }\r\n\r\n    async updateUser(){\r\n\r\n        let res = '';\r\n\r\n        const url = \"https://tutorial-group-24.herokuapp.com/user/modifyUser/\" + document.getElementById(\"banner\").value;\r\n        // const url = \"http://localhost:5000/user/modifyUser/\" + document.getElementById(\"banner\").value;\r\n\r\n        await Axios.put(url, {\r\n            bid: document.getElementById(\"banner\").value,\r\n            name: document.getElementById(\"name\").value,\r\n            email: document.getElementById(\"email\").value\r\n        })\r\n            .then(function (response) {\r\n                    res= response;\r\n            })\r\n\r\n        if(res.data.Status === \"Success\"){\r\n        this.setState({\r\n            msg: res.data.message\r\n        })\r\n    }\r\n        document.getElementById(\"banner\").value = \"\";\r\n        document.getElementById(\"name\").value = \"\";\r\n        document.getElementById(\"email\").value = \"\";\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <input type=\"text\" id=\"banner\" placeholder=\"Enter Banner ID\"/>\r\n                <input type=\"text\" id=\"name\" placeholder=\"Enter Name\"/>\r\n                <input type=\"text\" id=\"email\" placeholder=\"Enter Email\"/>\r\n                <button className=\"updateUser\" onClick={this.updateUser}>Submit</button>\r\n                <p className=\"msg\">{this.state.msg}</p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UpdateUser;\r\n","import React, { Component } from \"react\";\r\nimport Axios from \"axios\";\r\nimport './table.css';\r\n\r\nclass ShowSpecUser extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            users: undefined\r\n        }\r\n        this.getUser = this.getUser.bind(this);\r\n    }\r\n\r\n    async getUser() {\r\n\r\n        if (document.getElementById(\"banner\").value === \"\") {\r\n            alert(\"Please fill the field\");\r\n            return;\r\n        }\r\n\r\n        const url = \"https://tutorial-group-24.herokuapp.com/user/specUser/\" + document.getElementById(\"banner\").value;\r\n        // const url = \"http://localhost:5000/user/specUser/\" + document.getElementById(\"banner\").value;\r\n        const response = await Axios.get(url);\r\n        if(response.data.Status === \"Success\"){\r\n            this.setState({\r\n                users: response.data.data[0]\r\n            })\r\n        }\r\n    }\r\n\r\n    show() {\r\n        if (this.state.users === undefined) {\r\n            return null;\r\n        } else {\r\n            return (\r\n                <tr>\r\n                    <td>{this.state.users.bid}</td>\r\n                    <td>{this.state.users.name}</td>\r\n                    <td>{this.state.users.email}</td>\r\n                </tr>\r\n            );\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"gap\">\r\n                    <input type=\"text\" id=\"banner\" placeholder=\"Enter Banner ID\" />\r\n                    <button className=\"searchUser\" onClick={this.getUser}>Search</button>\r\n                </div>\r\n                <table>\r\n                    <thead>\r\n                    <tr>\r\n                        <th>Banner ID</th>\r\n                        <th>Name</th>\r\n                        <th>Email</th>\r\n                    </tr>\r\n                    {this.show()}\r\n                    </thead>\r\n                    <tbody>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ShowSpecUser;\r\n\r\n","import React, {Component} from \"react\";\r\nimport {Route, Switch} from \"react-router-dom\";\r\nimport Movie from \"./Movie\";\r\nimport AddUser from \"../tut5_6/addUser\";\r\nimport ShowUser from \"../tut5_6/showUser\";\r\nimport UpdateUser from \"../tut5_6/updateUser\";\r\nimport ShowSpecUser from \"../tut5_6/showSpecUser\";\r\n\r\nclass Routes extends Component {\r\n    render() {\r\n        return (\r\n            <Switch>\r\n                <Route exact path='/movie' component={Movie}/>\r\n                <Route exact path='/addUser' component={AddUser}/>\r\n                <Route exact path='/showUser' component={ShowUser}/>\r\n                <Route exact path='/updateUser' component={UpdateUser}/>\r\n                <Route exact path='/showSpecUser' component={ShowSpecUser}/>\r\n            </Switch>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Routes;\r\n","import React, {Component} from \"react\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport './bar.css';\r\n\r\nclass Bar extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            active_1: false,\r\n            active_2: false,\r\n            active_3: false,\r\n            active_4: false\r\n        }\r\n\r\n        this.selectButton = this.selectButton.bind(this);\r\n\r\n    }\r\n\r\n    selectButton(e) {\r\n        let redirect = '';\r\n\r\n        if(e.target.id === 'active_1') {\r\n            this.setState({\r\n                active_1: true,\r\n                active_2: false,\r\n                active_3: false,\r\n                active_4: false\r\n            });\r\n            redirect = '/showUser';\r\n        }else if (e.target.id === 'active_2') {\r\n            this.setState({\r\n                active_1: false,\r\n                active_2: true,\r\n                active_3: false,\r\n                active_4: false\r\n            });\r\n            redirect = '/showSpecUser';\r\n        }else if (e.target.id === 'active_3') {\r\n            this.setState({\r\n                active_1: false,\r\n                active_2: false,\r\n                active_3: true,\r\n                active_4: false\r\n            });\r\n            redirect = '/addUser';\r\n        }else if (e.target.id === 'active_4') {\r\n            this.setState({\r\n                active_1: false,\r\n                active_2: false,\r\n                active_3: false,\r\n                active_4: true\r\n            });\r\n            redirect = '/updateUser';\r\n        }\r\n        this.props.history.push(redirect);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"buttonArea\">\r\n                <button className={this.state.active_1 ? 'buttonBar active' : 'buttonBar'} id=\"active_1\"\r\n                        onClick={this.selectButton}>Show Users</button>\r\n                <button className={this.state.active_2 ? 'buttonBar active' : 'buttonBar'} id=\"active_2\"\r\n                        onClick={this.selectButton}>Specific User</button>\r\n                <button className={this.state.active_3 ? 'buttonBar active' : 'buttonBar'} id=\"active_3\"\r\n                        onClick={this.selectButton}>Insert User</button>\r\n                <button className={this.state.active_4 ? 'buttonBar active' : 'buttonBar'} id=\"active_4\"\r\n                        onClick={this.selectButton}>Modify User</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(Bar);\r\n","import React, {Component} from \"react\";\r\nimport Bar from \"./bar\";\r\n\r\nclass User extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n            <Bar/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default User;\r\n\r\n","import React from 'react';\r\nimport Routes from \"./components/Routes\";\r\nimport {BrowserRouter as Router} from \"react-router-dom\";\r\nimport User from \"./tut5_6/user\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n        <Router>\r\n            <User/>\r\n            <Routes />\r\n        </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}