{"version":3,"sources":["logo.svg","serviceWorker.js","components/ResultBox.js","components/Card.js","components/Search.js","App.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","ResultBox","props","state","hover","this","setState","linkStyle","backgroundColor","cursor","onClick","clickHandler","text","image","onMouseEnter","toggleHover","bind","onMouseLeave","style","Component","Card","className","src","alt","title_key","React","Search","marvelMovieList","list","movie","showing","change","document","getElementById","value","role","maxWidth","margin","minWidth","float","marginRight","type","id","placeholder","onChange","selectedValue","map","row","key","name","Poster","onClickDrpDwnItem","evt","searchString","target","searchList","length","toLowerCase","includes","push","App","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.3a03099b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\n\r\n\r\nclass ResultBox extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {hover:false}\r\n    }\r\n\r\n    toggleHover() {\r\n\t    this.setState({hover: !this.state.hover})\r\n    }\r\n\r\n    render() {\r\n\r\n        var linkStyle;\r\n      if (this.state.hover) {\r\n            linkStyle = {backgroundColor: '#d6d2d2',cursor: 'pointer'}\r\n        } else {\r\n            linkStyle = {backgroundColor: '#ffffff'}\r\n        }\r\n        return (\r\n            <div onClick={()=>this.props.clickHandler(this.props.text,this.props.image)} >\r\n                <label \r\n                onMouseEnter={this.toggleHover.bind(this)} onMouseLeave={this.toggleHover.bind(this)} style={linkStyle} >{this.props.text}</label>\r\n                        \r\n\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default ResultBox","import React from \"react\";\r\nimport './Card.css'\r\n\r\nexport class Card extends React.Component{\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"movie\">\r\n                <img className=\"poster\" src={this.props.image} alt={\"\"}/>\r\n                <div className=\"title\">{this.props.title_key}</div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Card;\r\n","import React, { Component } from 'react';\r\nimport ResultBox from './ResultBox';\r\nimport Card from './Card';\r\n\r\nclass Search extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            marvelMovieList: [\r\n                {\r\n                    \"id\": 1,\r\n                    \"name\":\"Iron Man\",\r\n                    \"Poster\":\"https://m.media-amazon.com/images/M/MV5BMTczNTI2ODUwOF5BMl5BanBnXkFtZTcwMTU0NTIzMw@@._V1_SX300.jpg\"\r\n                },\r\n                {\r\n                    \"id\": 2,\r\n                    \"name\":\"The Incredible Hulk\",\r\n                    \"Poster\":\"https://m.media-amazon.com/images/M/MV5BMTUyNzk3MjA1OF5BMl5BanBnXkFtZTcwMTE1Njg2MQ@@._V1_SX300.jpg\"\r\n                },\r\n                {\r\n                    \"id\": 3,\r\n                    \"name\":\"Iron Man 2\",\r\n                    \"Poster\":\"https://m.media-amazon.com/images/M/MV5BMTM0MDgwNjMyMl5BMl5BanBnXkFtZTcwNTg3NzAzMw@@._V1_SX300.jpg\"\r\n                },\r\n                {\r\n                    \"id\": 4,\r\n                    \"name\":\"Thor\",\r\n                    \"Poster\":\"https://m.media-amazon.com/images/M/MV5BOGE4NzU1YTAtNzA3Mi00ZTA2LTg2YmYtMDJmMThiMjlkYjg2XkEyXkFqcGdeQXVyNTgzMDMzMTg@._V1_SX300.jpg\"\r\n                },\r\n                {\r\n                    \"id\": 5,\r\n                    \"name\":\"Captain America: The First Avenger\",\r\n                    \"Poster\":\"https://m.media-amazon.com/images/M/MV5BMTYzOTc2NzU3N15BMl5BanBnXkFtZTcwNjY3MDE3NQ@@._V1_SX300.jpg\"\r\n                },\r\n                {\r\n                    \"id\": 6,\r\n                    \"name\":\"The Avengers\",\r\n                    \"Poster\":\"https://m.media-amazon.com/images/M/MV5BNDYxNjQyMjAtNTdiOS00NGYwLWFmNTAtNThmYjU5ZGI2YTI1XkEyXkFqcGdeQXVyMTMxODk2OTU@._V1_SX300.jpg\"\r\n                },\r\n                {\r\n                    \"id\": 7,\r\n                    \"name\":\"Iron Man 3\",\r\n                    \"Poster\":\"https://m.media-amazon.com/images/M/MV5BMjE5MzcyNjk1M15BMl5BanBnXkFtZTcwMjQ4MjcxOQ@@._V1_SX300.jpg\"\r\n                },\r\n                {\r\n                    \"id\": 8,\r\n                    \"name\":\"Thor: The Dark World\",\r\n                    \"Poster\":\"https://m.media-amazon.com/images/M/MV5BMTQyNzAwOTUxOF5BMl5BanBnXkFtZTcwMTE0OTc5OQ@@._V1_SX300.jpg\"\r\n                },\r\n                {\r\n                    \"id\": 9,\r\n                    \"name\":\"Captain America: The Winter Soldier\",\r\n                    \"Poster\":\"https://m.media-amazon.com/images/M/MV5BMzA2NDkwODAwM15BMl5BanBnXkFtZTgwODk5MTgzMTE@._V1_SX300.jpg\"\r\n                },\r\n                {\r\n                    \"id\": 10,\r\n                    \"name\":\"Guardians of the Galaxy\",\r\n                    \"Poster\":\"https://m.media-amazon.com/images/M/MV5BMTAwMjU5OTgxNjZeQTJeQWpwZ15BbWU4MDUxNDYxODEx._V1_SX300.jpg\"\r\n                },\r\n                {\r\n                    \"id\": 11,\r\n                    \"name\":\"Avengers: Age of Ultron\",\r\n                    \"Poster\":\"https://m.media-amazon.com/images/M/MV5BMTM4OGJmNWMtOTM4Ni00NTE3LTg3MDItZmQxYjc4N2JhNmUxXkEyXkFqcGdeQXVyNTgzMDMzMTg@._V1_SX300.jpg\"\r\n                },\r\n                {\r\n                    \"id\": 12,\r\n                    \"name\":\"Ant-Man\",\r\n                    \"Poster\":\"https://m.media-amazon.com/images/M/MV5BMjM2NTQ5Mzc2M15BMl5BanBnXkFtZTgwNTcxMDI2NTE@._V1_SX300.jpg\"\r\n                },\r\n                {\r\n                    \"id\": 13,\r\n                    \"name\":\"Captain America: Civil War\",\r\n                    \"Poster\":\"https://m.media-amazon.com/images/M/MV5BMjQ0MTgyNjAxMV5BMl5BanBnXkFtZTgwNjUzMDkyODE@._V1_SX300.jpg\"\r\n                },\r\n                {\r\n                    \"id\": 14,\r\n                    \"name\":\"Doctor Strange\",\r\n                    \"Poster\":\"https://m.media-amazon.com/images/M/MV5BNjgwNzAzNjk1Nl5BMl5BanBnXkFtZTgwMzQ2NjI1OTE@._V1_SX300.jpg\"\r\n                },\r\n                {\r\n                    \"id\": 15,\r\n                    \"name\":\"Guardians of the Galaxy Vol. 2\",\r\n                    \"Poster\":\"https://m.media-amazon.com/images/M/MV5BNjM0NTc0NzItM2FlYS00YzEwLWE0YmUtNTA2ZWIzODc2OTgxXkEyXkFqcGdeQXVyNTgwNzIyNzg@._V1_SX300.jpg\"\r\n                },\r\n                {\r\n                    \"id\": 16,\r\n                    \"name\":\"Spider-Man: Homecoming\",\r\n                    \"Poster\":\"https://m.media-amazon.com/images/M/MV5BNTk4ODQ1MzgzNl5BMl5BanBnXkFtZTgwMTMyMzM4MTI@._V1_SX300.jpg\"\r\n                },\r\n                {\r\n                    \"id\": 17,\r\n                    \"name\":\"Thor: Ragnarok\",\r\n                    \"Poster\":\"https://m.media-amazon.com/images/M/MV5BMjMyNDkzMzI1OF5BMl5BanBnXkFtZTgwODcxODg5MjI@._V1_SX300.jpg\"\r\n                },\r\n                {\r\n                    \"id\": 18,\r\n                    \"name\":\"Black Panther\",\r\n                    \"Poster\":\"https://m.media-amazon.com/images/M/MV5BMTg1MTY2MjYzNV5BMl5BanBnXkFtZTgwMTc4NTMwNDI@._V1_SX300.jpg\"\r\n                },\r\n                {\r\n                    \"id\": 19,\r\n                    \"name\":\"Avengers: Infinity War\",\r\n                    \"Poster\":\"https://m.media-amazon.com/images/M/MV5BMjMxNjY2MDU1OV5BMl5BanBnXkFtZTgwNzY1MTUwNTM@._V1_SX300.jpg\"\r\n                },\r\n                {\r\n                    \"id\": 20,\r\n                    \"name\":\"Ant-Man and the Wasp\",\r\n                    \"Poster\":\"https://m.media-amazon.com/images/M/MV5BYjcyYTk0N2YtMzc4ZC00Y2E0LWFkNDgtNjE1MzZmMGE1YjY1XkEyXkFqcGdeQXVyMTMxODk2OTU@._V1_SX300.jpg\"\r\n                },\r\n                {\r\n                    \"id\": 21,\r\n                    \"name\":\"Captain Marvel\",\r\n                    \"Poster\":\"https://m.media-amazon.com/images/M/MV5BMTE0YWFmOTMtYTU2ZS00ZTIxLWE3OTEtYTNiYzBkZjViZThiXkEyXkFqcGdeQXVyODMzMzQ4OTI@._V1_SX300.jpg\"\r\n                },\r\n                {\r\n                    \"id\": 22,\r\n                    \"name\":\"Avengers: Endgame\",\r\n                    \"Poster\":\"https://m.media-amazon.com/images/M/MV5BMTc5MDE2ODcwNV5BMl5BanBnXkFtZTgwMzI2NzQ2NzM@._V1_SX300.jpg\"\r\n                },\r\n                {\r\n                    \"id\": 23,\r\n                    \"name\":\"Spider-Man: Far from Home\",\r\n                    \"Poster\":\"https://m.media-amazon.com/images/M/MV5BMGZlNTY1ZWUtYTMzNC00ZjUyLWE0MjQtMTMxN2E3ODYxMWVmXkEyXkFqcGdeQXVyMDM2NDM2MQ@@._V1_SX300.jpg\"\r\n                }\r\n            ],\r\n            list: [],\r\n            movie: \"\",\r\n            image: \"\",\r\n            showing:false\r\n        }\r\n        this.change = this.change.bind(this);\r\n    }\r\n\r\n     onClickDrpDwnItem(movie,image) {\r\n        this.setState({movie: movie, image:image ,showing:true,list: []});\r\n        document.getElementById(\"searchBox\").value = movie;\r\n    }\r\n\r\n    render() {\r\n        var showing = this.state.showing;\r\n        return (\r\n            <main role=\"main\" className=\"container\" style={{maxWidth: '900px', margin: '40px auto 0'}}>\r\n                <div className=\"p-3 bg-light rounded box-shadow\" style={{minWidth: '500px', float: 'left', marginRight: '50px'}}>\r\n                    <h1>Marvel Movies</h1>\r\n                    <div className=\"media form-group pt-3\">\r\n                    <span className=\"glyphicon glyphicon-search\"></span>\r\n                        <input type=\"text\"\r\n                            className=\"form-control input-lg media-body\"\r\n                            id=\"searchBox\"\r\n                               placeholder=\"Search\"\r\n                            onChange={this.change}\r\n                            value={this.state.selectedValue}\r\n                            type= \"search\"\r\n                        />\r\n                    </div>\r\n                    <div className='continer' id='searchResults'>\r\n                        {this.state.list.map((row) => (\r\n                            <ResultBox key={row.id} text={row.name}  image={row.Poster} clickHandler={this.onClickDrpDwnItem.bind(this)}/>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n                    {\r\n                        showing?\r\n                            <div id={\"moviecard\"}>\r\n                                <Card title_key={this.state.movie} image={this.state.image} />\r\n                            </div>\r\n                            :null\r\n                    }\r\n            </main>\r\n        );\r\n    }\r\n    change(evt) {\r\n        // console.log(evt.target.value);\r\n        const searchString = evt.target.value\r\n        const searchList = []\r\n\r\n        if (searchString.length === 0) {\r\n            this.setState({movie: \"\", image: \"\",showing:false})\r\n        }\r\n        //Search the movie\r\n        this.state.marvelMovieList.map((row) => {\r\n            if (row.name.toLowerCase().includes(searchString.toLowerCase()) && searchString !== ''\r\n                && searchString !== '-') {\r\n                if (searchList.length <= 10)\r\n                    searchList.push(row)\r\n            }\r\n            return searchList;\r\n        })\r\n        this.setState({\r\n            list: searchList\r\n        })\r\n    }\r\n}\r\n\r\nexport default Search;\r\n","import React from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport Search from \"./components/Search\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n        <Search />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}